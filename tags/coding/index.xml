<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coding on schollz blog</title><link>https://schollz.github.io/tags/coding/</link><description>Recent content in Coding on schollz blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 27 Oct 2017 04:51:39 -0600</lastBuildDate><atom:link href="https://schollz.github.io/tags/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Look ma, no hard disk</title><link>https://schollz.github.io/just-ram/</link><pubDate>Fri, 27 Oct 2017 04:51:39 -0600</pubDate><guid>https://schollz.github.io/just-ram/</guid><description>I had a bad habit of leaving everything in my Downloads folder, and never clearing anything out. I might need it, assume, at some point. However, this is never true. To get myself out of this &amp;ldquo;I might need it*&amp;rdquo; mindset, I started deleting my Downloads/ folder every time I start my computer. This way, I had to remember, that anything I put in there would disappear when I turned my computer off.</description></item><item><title>Sending a file in 2017</title><link>https://schollz.github.io/sending-a-file/</link><pubDate>Sat, 21 Oct 2017 20:11:36 -0600</pubDate><guid>https://schollz.github.io/sending-a-file/</guid><description>My good friend Jessie and I want to watch a documentary movie on turkeys together.1 I have the file on my computer and she does not, so I want to send this file to her directly2 from my computer. There are a couple of restrictions though:
the turkey documentary is a ~1 GB file Jessie lives 2,000 miles away in a different country Jessie uses Windows OS Jessie is not a programmer, and avoids anything that involves running something on the command-line How should I send the movie, in the fastest possible way, so we can start learning about turkeys together?</description></item><item><title>Send a file with IPFS</title><link>https://schollz.github.io/ipfs-transfer/</link><pubDate>Sun, 15 Oct 2017 21:27:07 -0600</pubDate><guid>https://schollz.github.io/ipfs-transfer/</guid><description>Sending a file with IPFS is fun (after all it is leveraging the peer-to-peer network and content-addressable blocks of data!) and easy.
Install IPFS Here is the basic instructions to install:
wget https://dist.ipfs.io/go-ipfs/v0.4.11/go-ipfs_v0.4.11_linux-amd64.tar.gz tar -xvzf go-ipfs* cd go-ipfs sudo ./install.sh ipfs init ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/9001 ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001 The last two lines are useful for listening on LAN connected devices. The port 0.0.0.0 will let run the IPFS daemon on a different computer but still use the peer-to-peer portal from that computer.</description></item><item><title>Using crawdad</title><link>https://schollz.github.io/crawdad/</link><pubDate>Wed, 11 Oct 2017 20:03:10 -0600</pubDate><guid>https://schollz.github.io/crawdad/</guid><description>crawdad is a simple, yet powerful alternative for scraping in a distributed, persistent manner (backed by Redis). It can do simple things, like generating site maps. It can also do complicated things, like extracting all the quotes from every page on a quotes website (tutorial follows).
Install First get Docker which will be used for running Redis.
Then you can simply download crawdad:
$ wget https://github.com/schollz/crawdad/releases/download/v3.0.0/crawdad_3.0.0_linux_amd64.zip $ unzip crawdad*zip $ sudo mv crawdad*amd64 /usr/local/bin/crawdad Unlike many other scraping frameworks, crawdad is a single binary that has no dependencies.</description></item><item><title>Read news in the terminal with Docker</title><link>https://schollz.github.io/docker-news/</link><pubDate>Thu, 05 Oct 2017 05:44:33 -0600</pubDate><guid>https://schollz.github.io/docker-news/</guid><description>I&amp;rsquo;ve been working on readable, a simple bookmarklet for easily reading articles in the browser (Github). As part of this, I made a Docker image that utilizes Mozilla&amp;rsquo;s readability package.
You can easily use the Docker image to directly read articles from the command line.
First pull it.
$ docker pull schollz/readable Then set a URL that contains a news article:
$ URL=http://www.cnn.com/2017/10/03/world/nobel-physics-prize-2017/index.html Then read!
$ docker run --rm -t schollz/readable $URL|more ---------------------------------------------------------- Nobel Prize in Physics goes to &amp;#39;black hole telescope&amp;#39;trio ---------------------------------------------------------- Story highlights - The development proves Einstein&amp;#39;s prediction of gravitational waves - More than 1,000 people worked on the technology over four decades (CNN)The 2017Nobel Prize in Physics has been awarded to Rainer Weiss, Barry C.</description></item><item><title>Easily captioning images from Markdown</title><link>https://schollz.github.io/captioning-images/</link><pubDate>Wed, 27 Sep 2017 13:55:03 -0600</pubDate><guid>https://schollz.github.io/captioning-images/</guid><description>I like to caption my images and I like to write in Markdown. However it is currently not possible to make captioned images, i.e. make figures in Markdown, at for the spec at the time of this writing (version 0.27. Of course, Markdown supports HTML, so you could just insert a &amp;lt;figure&amp;gt; tag everywhere instead of using the Markdown ![]() syntax. However, I want to use the ![]() syntax, so here is a nice trick for captioning images (by creating figures) using only the Markdown syntax.</description></item><item><title>OSS divisions</title><link>https://schollz.github.io/oss/</link><pubDate>Sun, 17 Sep 2017 09:04:40 -0600</pubDate><guid>https://schollz.github.io/oss/</guid><description>There are two reasons I think its good for everyone to have a good division between &amp;ldquo;personal&amp;rdquo; and &amp;ldquo;corporate&amp;rdquo; use for open-source software (OSS).
If you, the OSS maintainer, are compensated, everyone benefits. While your time spent coding your OSS is valuable, I think the frictionless delivery of new features and bug fixes is something that shouldn&amp;rsquo;t go away. Since I&amp;rsquo;m not actively supporting you financially to work on this, I can only hope that someone does so I can benefit.</description></item><item><title>Why Go?</title><link>https://schollz.github.io/why-go/</link><pubDate>Sat, 29 Apr 2017 09:48:59 -0600</pubDate><guid>https://schollz.github.io/why-go/</guid><description>Lots of people ask me this question, and I end up writing the same answer over and over. I just wrote my plain answer here so I can just link to it. Don&amp;rsquo;t hesitate to ask me other questions, though if you need. The basic answer is: because of time and money.
Coding in Go saves me time. When I write code, I often write run the program periodically to test it.</description></item><item><title>Using Wordpress with Docker</title><link>https://schollz.github.io/wordpress-on-docker/</link><pubDate>Wed, 11 Jan 2017 13:54:51 -0600</pubDate><guid>https://schollz.github.io/wordpress-on-docker/</guid><description>I like wordpress, but it is very intensive to get working, as it uses a lot of PHP and requires SQL. Of course, nowadays you can do everything in Docker, so here is my method for getting wordpress to work great on Docker.
Using Docker, I was able to get 2 blogs run on the smallest DigitalOcean droplet (which was already running two dozen other things). Each blog required 360MB of RAM, and the total Docker space was 3.</description></item><item><title>Skip swiping with adb and bash</title><link>https://schollz.github.io/skip-swiping/</link><pubDate>Sat, 10 Sep 2016 06:41:49 -0600</pubDate><guid>https://schollz.github.io/skip-swiping/</guid><description>Like many, I&amp;rsquo;ve used dating apps (Tinder / Bumble / OkCupid) to find potential dates. I was annoyed at having to swipe right on a lot of people who would probably never respond to me after I swiped right. It seemed to me to be a waste of time to swipe through those people who would not actually be available in my dating pool. I&amp;rsquo;d rather only view a pool of people who respond to me so we can open a dialog right away to see whether we would match.</description></item><item><title>Downloading sounds from the JS-8</title><link>https://schollz.github.io/js8/</link><pubDate>Fri, 10 Apr 2015 13:54:40 -0600</pubDate><guid>https://schollz.github.io/js8/</guid><description>Boss makes a really cool Audio player with guitar effects, the JS-8. It turns out that some of the cool sounds that is has can be downloaded directly via a little hacking. ​ ​ You&amp;rsquo;ll need to create a fake JS-8 device. To do this you basically download the backup data and then format a thumbdrive so that it looks like a JS-8 device.
First download eBand JS-8 factory installed data in the included SD Card.</description></item></channel></rss>